name: Trunk

on:
  push:
    branches:
      - main
    paths:
      - 'web/**'
      - '.github/workflows/trunk.yml'

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:

  build:
    if: "${{ !contains(github.event.head_commit.message, 'chore(main): release web') }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Build
        shell: bash
        run: |
          echo "Build"

  deploy:
    name: 'Deploy Development'
    runs-on: ubuntu-latest
    needs: build
    if: "${{ !contains(github.event.head_commit.message, 'chore(main): release web') }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Development
        shell: bash
        run: |
          echo "Deploy to Development"

  playwright-test-development:
    runs-on: ubuntu-latest
    needs: deploy
    if: "${{ !contains(github.event.head_commit.message, 'chore(main): release web') }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: playwright-test
        shell: bash
        run: |
          echo "playwright-test"

  sitespeed-io-test-development:
    runs-on: ubuntu-latest
    needs: deploy
    if: "${{ !contains(github.event.head_commit.message, 'chore(main): release web') }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: sitespeed-io-test
        shell: bash
        run: |
          echo "sitespeed-io-test"

  release-please:
    runs-on: ubuntu-latest
    needs: [playwright-test-development, sitespeed-io-test-development]
    outputs:
      web--tag_name: ${{ steps.release.outputs.web--tag_name}}
      web--release_created: ${{ steps.release.outputs.web--release_created}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
      - name: Print release outputs for debugging
        continue-on-error: true
        run: |
          echo "Release outputs:"
          echo '${{ toJson(steps.release.outputs) }}'

  build-release:
    if: ${{needs.release-please.outputs.web--release_created}}
    runs-on: ubuntu-latest
    needs: release-please
    outputs:
      web--tag_name: ${{ needs.release-please.outputs.web--tag_name}}
      web--release_created: ${{ needs.release-please.outputs.web--release_created}}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node-env
        with:
          node-version: 18
          cache-path: web/node_modules
          cache-key: "${{hashFiles('web/package-lock.json')}}"
          project: web
      - run: npm test --prefix web -- a --watchAll=false
      - run: npm run build --prefix web
      - run: zip -r ${{ needs.release-please.outputs.web--tag_name }}.zip web/build
      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ needs.release-please.outputs.web--tag_name }} ${{ needs.release-please.outputs.web--tag_name }}.zip
      - name: Debug
        shell: bash
        run: |
          echo "web--tag_name=${{ needs.release-please.outputs.web--tag_name }}" >> "$GITHUB_OUTPUT"

  deploy-uat:
    if: ${{needs.build-release.outputs.web--tag_name}}
    name: 'Deploy UAT'
    runs-on: ubuntu-latest
    needs: build-release
    outputs:
      uat-deployed: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to UAT
        shell: bash
        run: |
          echo "deployment of tag ${{ needs.build-release.outputs.web--tag_name }} to uat"

  playwright-test-uat:
    if: ${{needs.deploy-uat.outputs.uat-deployed}}
    runs-on: ubuntu-latest
    needs: deploy-uat
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
                
      - name: playwright-test
        shell: bash
        run: |
          echo "playwright-test"